-A LiveView process is a process that receives events as messages, updates its state accordingly, renders a template, and sends back the diffs
-Events can be sent externally by the browser(handle_event), or be sent internally by the LiveView itself or any other Elixir process(handle_info)

Lesson 3 - Button Clicks
-LiveView's have 3 primary callback functions
-mount, render and handle_event
    -mount assigns state to the socket
    -render renders the page using html code and can include eex tags and embedded phoenix
    -handle_event handles events that are sent from render(for example button clicks)
-In this lesson we build a light bar that can be increased/decreased with buttons

Lesson 4 - LiveView Life Cycle
-Initial HTTP request send a HTML page back
-WebSocket is opened and spawns a LiveView Process which can react to events and update the page dynamically

Lesson 5 - Dynamic Form 
-Shows us how to update the page dynamically as we change input values on the page.
-Change light bar from lesson 3 to use a slider instead of up and down buttons
    -Add option to change colors of the light as well

Lesson 6 - Dashboard
-Update page internally, rather than external input by the user
-Send self message after server is connected
    -Use hande_info to update "sales" values on the page to random numbers

Lesson 7 - Search
-Create a search bar for flights using phoenix that uses external input by the user to search values from database
-Also included a loading indicator while waiting for results to show
-Excercise: Implement search for finding a vehicle make or model

Lesson 8 - Autocomplete
-Implemented autocomplete feature into phoenix LiveView(vehicle and flights from last lesson)
    -Suggestions from Elixir file(pre-prepared by the course)

Lesson 9 - Filtering
-Filter boats by type(sporting, fishing and sailing) and price range(low, medium, high)
-Use Ecto to query database of boats
-Use temporary_assigns: to reset data if we don't need to keep information in process memory(just need to render it)
    -Minimizes memory usage on the server
-Exercise: Implement filter for atheles(filter by sport and status)